# Development Environment - Working Configuration
replicaCount: 2
# Use working public image (CI can update this later)
image:
  repository: ghcr.io/arthur-16/argodemo
  tag: "1.21-alpine"
  digest: "sha256:12efcf2fe5742eb85cc5d8dc0c3e1918ae287e817225d0bde048b61fc03c1c49" # CI will populate this when your custom image is built
  pullPolicy: IfNotPresent
demo:
  message: "GitOps Demo - Development Build d9624e439bc6"
  version: "dev-v1.1-d9624e439bc6"
  environment: "development"
<<<<<<< HEAD

# datadog:
#   site: "PLACEHOLDER_DD_SITE"
#   clusterName: "PLACEHOLDER_DD_CLUSTER"
#   apiKeyExistingSecret: "datadog-secret"
#   tags:
#     - "env:production-demo"
#     - "cluster:minikube"
#   kubelet:
#     tlsVerify: false
#   apm:
#     instrumentation:
#       enabled: true
#       targets:
#         - name: "default-target"
#           ddTraceVersions:
#             python: "3"
#             nodejs: "5"
#             java: "1"
#     portEnabled: true
#     port: 8126
#   logs:
#     enabled: true
#     containerCollectAll: true
#     autoMultiLine: true
#   processAgent:
#     enabled: true
#     processCollection: true
#   orchestratorExplorer:
#     enabled: true
#   clusterAgent:
#     enabled: true
#     replicas: 2
#     resources:
#       requests:
#         cpu: 100m
#         memory: 256Mi
#       limits:
#         cpu: 200m
#         memory: 512Mi
#   agents:
#     resources:
#       requests:
#         cpu: 100m
#         memory: 256Mi
#       limits:
#         cpu: 200m
#         memory: 512Mi
#   kubeStateMetricsCore:
#     enabled: true

=======
datadog:
  site: "PLACEHOLDER_DD_SITE"
  clusterName: "PLACEHOLDER_DD_CLUSTER"
  apiKeyExistingSecret: "datadog-secret"
  tags:
    - "env:production-demo"
    - "cluster:minikube"
  kubelet:
    tlsVerify: false
  apm:
    instrumentation:
      enabled: true
      targets:
        - name: "default-target"
          ddTraceVersions:
            python: "3"
            nodejs: "5"
            java: "1"
    portEnabled: true
    port: 8126
  logs:
    enabled: true
    containerCollectAll: true
    autoMultiLine: true
  processAgent:
    enabled: true
    processCollection: true
  orchestratorExplorer:
    enabled: true
  clusterAgent:
    enabled: true
    replicas: 2
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 512Mi
  agents:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 512Mi
  kubeStateMetricsCore:
    enabled: true
>>>>>>> 46b58606474ecaae41228fb88ec2830a0833a1dd
service:
  type: ClusterIP
  port: 80
  targetPort: 80
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  host: demo-0-dev.local
  path: /
  pathType: Prefix
resources:
  requests:
    cpu: 30m
    memory: 32Mi
  limits:
    cpu: 60m
    memory: 64Mi
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 8
  targetCPUUtilizationPercentage: 60
healthcheck:
  enabled: true
  path: /
  initialDelaySeconds: 10
  periodSeconds: 10
